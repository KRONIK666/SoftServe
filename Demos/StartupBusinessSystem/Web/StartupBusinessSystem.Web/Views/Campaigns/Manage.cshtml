@model StartupBusinessSystem.Web.ViewModels.Campaigns.ManageCampaignViewModel
@{
    ViewBag.Title = "Manage";
}

<br />
<h2>Manage</h2>
<br />

@{
    if (!Model.AllPendingParticipations.Any())
    {
        <div>
            <h4>You currently don't have any pending requests!</h4>
            <h4>Check again later.</h4>
        </div>
    }
}

@foreach (var item in Model.AllPendingParticipations)
{
    Model.ParticipationId = item.Id;
    var priceToCheck = Math.Min(item.AvailableShares, item.OfferedShares);

    <h4>Company name: "@item.CompanyName"</h4>
    <h4>Shares offered: @item.OfferedShares</h4>
    <h4>Available shares: @item.AvailableShares</h4>
    @Html.ActionLink("View Profile", "CompanyProfile", "Campaigns", new { id = item.ParticipationCreatorId }, null)

    using (Html.BeginForm("Manage", "Campaigns", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <hr />
        if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger" role="alert">
                <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                <span class="sr-only">Error:</span>
                @Html.ValidationSummary(true)
            </div>
        }
        @Html.HiddenFor(m => m.ParticipationId)
        <div class="form-group">
            @Html.LabelFor(m => m.SharesGivenToUser, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.SharesGivenToUser, new { Value = "", oninput = "makeButtonInactive(" + priceToCheck + ", " + item.Id + ")", id = "text-form-" + @item.Id, @class = "form-control" })
                @Html.ValidationMessageFor(m => m.SharesGivenToUser)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.IsAccepted, "Accept", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.RadioButtonFor(m => m.IsAccepted, "true", new { onchange = "makeTextBoxActive(" + item.Id + ")" })
                @Html.ValidationMessageFor(m => m.IsAccepted)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.IsAccepted, "Refuse", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.RadioButtonFor(m => m.IsAccepted, "false", new { onchange = "makeTextBoxInactive(" + item.Id + ")" })
                @Html.ValidationMessageFor(m => m.IsAccepted)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="submit-button-@item.Id" class="btn btn-info" value="Submit" />
            </div>
        </div>
        <hr />
    }
}
<br />
<br />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function makeButtonInactive(maxPrice, id) {
            let sum = document.getElementById("text-form-" + id).value;
            let calck = parseInt(sum);
            if (calck < 1 || calck > maxPrice) {
                document.getElementById("submit-button-" + id).disabled = true;
            } else {
                document.getElementById("submit-button-" + id).disabled = false;
            }
        }

        function makeTextBoxActive(id) {
            document.getElementById("text-form-" + id).disabled = false;
        }

        function makeTextBoxInactive(id) {
            document.getElementById("submit-button-" + id).disabled = false;
            document.getElementById("text-form-" + id).value = "";
            document.getElementById("text-form-" + id).disabled = true;
        }
    </script>
}